<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset={+IO.encoding+}" />
<meta name="generator" content="JsDoc Toolkit"/>
{! Link.base = "../"; /* all generated links will be relative to this */ !}
<title>HiloJS API Reference - {+data.alias+}</title>
<link href="../../css/bootstrap.min.css" rel="stylesheet">
<style type="text/css">
{+include("static/default.css")+}
</style>
<link href="../../css/bootstrap-responsive.min.css" rel="stylesheet">
</head>

<body>
{+include("static/header.html").replace(/%link.base%/g, Link.base)+}

<div class="container-fluid">
    <div class="row-fluid">
        <div class="span3">
            {+publish.classesIndex+}
        </div>
        <div class="span9">

            <!-- ============================== class title ============================ -->
            <h1 style="color:#333;">
            {!
            var classType = "";
            
            if (data.isBuiltin()) {
                classType += "Built-In ";
            }
            
            if (data.isNamespace) {
                if (data.is('FUNCTION')) {
                    classType += "Function ";
                }
                if(data.isStatic){
                    classType += "Static Class ";
                }else{
                    classType += "Namespace ";
                }
            }
            else {
                classType += "Class ";
            }
        !}
        <!-- {+classType+ ' - ' +}{+data.alias+}{+data.type+} -->
        {+data.alias+}{+data.type+}
            </h1><br/>

            <!-- ============================== class summary ========================== -->            
        <p class="description">
            <if test="data.version"><br />Version
                {+ data.version +}.<br />
            </if>

            {!
                var borrowedMembers = data.properties.filter(function($){
                    return $.memberOf != data.alias
                });
                
                var contributers = [];
                borrowedMembers.map(function($){
                    if(contributers.indexOf($.memberOf) < 0) contributers.push($.memberOf);
                });
            !}
            <if test="contributers.length">
                <span style="display:block;margin:0 0 2px 0;">
                    <b style="margin-right:10px;">继承</b> {+data.alias+}
                    {+
                        contributers.map(
                            function($) { return ' <i class="icon-arrow-right"></i> ' + new Link().toSymbol($); }
                        ).join(" ")
                    +}
                </span>
            </if>

            {! var module = data.comment.getTag("module"); !}
            <if test="module.length">
                <span style="display:block;margin:0 0 2px 0;">
                    <b style="margin-right:10px;">模块</b> {+ module +}
                </span>
            </if>

            <if test="data.requires.length">
                <span style="display:block;margin:0 0 2px 0;">
                    <b style="margin-right:10px;">依赖</b>
                    {+ data.requires.map(function(item){
                            var clazz = item.match(/\/?(\w+)$/)[1];
                            return '<span>' + new Link().toSymbol(clazz).withText(item) + '</span>';
                        }).join(", ")
                    +}
                </span>
            </if>

            <span style="display:block;margin:0 0 2px 0;">
                <b style="margin-right:10px;">源码</b>
                {+new Link().toSrc(data.srcFile)+}
            </span>

            <br>
            {+resolveLinks(data.classDesc)+}
            {+resolveLinks(summarize(data.desc))+}
            
        </p>

        <!-- ============================== constructor summary ==================== -->            
        <!-- <if test="!data.isBuiltin() && (data.isNamespace || data.is('CONSTRUCTOR'))">
        <h3 style="margin-bottom:6px;">构造函数概览</h3>
        <table class="table table-striped table-bordered table-condensed" cellspacing="0" summary="A summary of the constructor documented in the class {+data.alias+}.">
            <thead>
                <tr>
                    <th scope="col" style="width:10%;"></th>
                    <th scope="col">说明</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="attributes">{!
                        if (data.isPrivate) output += "&lt;private&gt; ";
                        if (data.isInner) output += "&lt;inner&gt; ";
                    !}&nbsp;</td>
                    <td class="nameDescription" {!if (data.comment.getTag("hilited").length){output += 'style="color: red"'}!}>
                        <div class="fixedFont">
                            <b>{+ new Link().toSymbol(data.alias).inner('constructor')+}</b><if test="classType != 'Namespace '">{+ makeSignature(data.params) +}</if>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
        </if> -->

        <!-- ============================== properties summary ===================== -->
        <if test="data.properties.length">
            {! 
                var allProperties = data.properties.sort(makeSortby("name"));
                var ownProperties = data.properties.filter(function($){return $.memberOf == data.alias && !$.isNamespace}).sort(makeSortby("name"));
                var borrowedMembers = data.properties.filter(function($) {return $.memberOf != data.alias});
            !}
            <if test="allProperties.length">
            <div style="margin:30px 0 5px 0;">
                <h3 style="display:inline;margin-right:10px;">公开属性</h3>
                <if test="borrowedMembers.length">
                    <a style="color:#666;text-decoration:none;cursor:pointer;" onclick="toggleProperties()"><i class="icon-circle-arrow-right" id="propToggleIcon"></i><span id="propToggleTip">显示继承属性</span></a>
                </if>
            </div>
            <table class="table table-striped table-bordered table-condensed" cellspacing="0">
                <thead>
                    <tr>
                        <th scope="col" style="width:18px;padding:0;"></th>
                        <th scope="col" style="border-left:0;">属性</th>
                        <th scope="col" style="width:10%;">定义于</th>
                    </tr>
                </thead>
                <tbody>
                <for each="member" in="allProperties">
                    {!
                        var isBorrowed = borrowedMembers.indexOf(member) != -1;
                    !}
                    <tr {+ isBorrowed ? "class='inheritProp' style='display:none;'" : "" +}>
                        <td style="padding:0;">
                            {+ isBorrowed ? '<i class="icon-arrow-up" style="margin:6px 0 0 3px;"></i>' : '' +}
                        </td>
                        <td style="border-left:0;">
                            <div class="fixedFont">
                                <!-- <if test="member.isStatic && member.memberOf != '_global_'">
                                    {+member.memberOf+}.
                                </if> -->
                                <b>{+new Link().toSymbol(member.alias).withText(member.name)+}</b><if test="member.type.length">:{+ member.type +}</if>
                            </div>
                            <div class="description">
                                {!
                                    if (member.isStatic) output += '<span class="label">Static</span> ';
                                    if (member.isConstant) output += '<span class="label">Constant</span> ';
                                !}
                                {+resolveLinks(summarize(member.desc))+}
                            </div>
                        </td>
                        <td>
                            {!
                                output += isBorrowed ? new Link().toSymbol(member.memberOf) : member.memberOf
                            !}
                        </td>
                    </tr>
                </for>
                </tbody>
            </table>
            </if>

            <script type="text/javascript">
            function toggleProperties(){
                var alink = $('#propToggleIcon');
                if(alink.hasClass('icon-circle-arrow-right')){
                    alink.removeClass('icon-circle-arrow-right');
                    alink.addClass('icon-circle-arrow-down');
                    $('#propToggleTip').html('隐藏继承属性');
                    $('.inheritProp').show();
                }else{
                    alink.removeClass('icon-circle-arrow-down');
                    alink.addClass('icon-circle-arrow-right');
                    $('#propToggleTip').html('显示继承属性');
                    $('.inheritProp').hide();
                }
            }
            </script>
        </if>

        <!-- ============================== methods summary ======================== -->
        <if test="data.methods.length">
            {! 
                var allMethods = data.methods.sort(makeSortby("name"));
                var ownMethods = data.methods.filter(function($){return $.memberOf == data.alias  && !$.isNamespace}).sort(makeSortby("name"));
                var borrowedMethods = data.methods.filter(function($) {return $.memberOf != data.alias}); 
            !}
            <if test="allMethods.length">
            <div style="margin:30px 0 5px; 0">
                <h3 style="display:inline;margin-right:10px;">公开方法</h3>
                <if test="borrowedMethods.length">
                    <a style="color:#666;text-decoration:none;cursor:pointer;" onclick="toggleMethods()"><i class="icon-circle-arrow-right" id="methodToggleIcon"></i><span id="methodToggleTip">显示继承方法</span></a>
                </if>
            </div>
            <table class="table table-striped table-bordered table-condensed" cellspacing="0" summary="A summary of the methods documented in the class {+data.alias+}.">
                <thead>
                    <tr>
                        <th scope="col" style="width:18px;padding:0;"></th>
                        <th scope="col" style="border-left:0;">方法</th>
                        <th scope="col" style="width:10%;">定义于</th>
                    </tr>
                </thead>
                <tbody>
                <if test="!data.isStatic">
                <tr>
                    <td style="padding:0;"></td>
                    <td style="border-left:0;">
                        <div class="fixedFont">
                        <b><a href="#constructor">{+data.alias+}</a></b><if test="classType != 'Namespace '">{+ makeSignature2(data.params) +}</if>
                        </div>
                        <div class="description">构造函数。</div>
                    </td>
                    <td>{+ data.alias +}</td>
                </tr>
                </if>
                
                <for each="member" in="allMethods">
                    {!
                        var isBorrowed = borrowedMethods.indexOf(member) != -1;
                    !}
                    <tr {+ isBorrowed ? "class='inheritMethod' style='display:none;'" : "" +}>
                        <td style="padding:0;">
                            {+ isBorrowed ? '<i class="icon-arrow-up" style="margin:6px 0 0 3px;"></i>' : '' +}
                        </td>
                        <td style="border-left:0;">
                            <div class="fixedFont"><b>{+new Link().toSymbol(member.alias).withText(member.name.replace(/\^\d+$/, ''))+}</b>{+makeSignature2(member.params)+}<if test="member.returns[0]">:{+ member.returns[0] ? member.returns[0].type : '' +}</if>
                            </div>
                            <div class="description">
                                {!
                                    if(member.isStatic || data.isStatic) output += '<span class="label">Static</span> ';
                                !}
                                {+resolveLinks(summarize(member.desc))+}
                            </div>
                        </td>
                        <td>
                            {!
                                output += isBorrowed ? new Link().toSymbol(member.memberOf) : member.memberOf
                            !}
                        </td>
                    </tr>
                </for>
                </tbody>
            </table>
            </if>

            <script type="text/javascript">
            function toggleMethods(){
                var alink = $('#methodToggleIcon');
                if(alink.hasClass('icon-circle-arrow-right')){
                    alink.removeClass('icon-circle-arrow-right');
                    alink.addClass('icon-circle-arrow-down');
                    $('#methodToggleTip').html('隐藏继承方法');
                    $('.inheritMethod').show();
                }else{
                    alink.removeClass('icon-circle-arrow-down');
                    alink.addClass('icon-circle-arrow-right');
                    $('#methodToggleTip').html('显示继承方法');
                    $('.inheritMethod').hide();
                }
            }
            </script>
        </if>

        <!-- ============================== events summary ======================== -->
        <if test="data.events.length">
            {! var ownEvents = data.events.filter(function($){return $.memberOf == data.alias  && !$.isNamespace}).sort(makeSortby("name")); !}
            <if test="ownEvents.length">
            <h3 style="margin-bottom:6px;">事件概览</h3>
            <table class="table table-striped table-bordered table-condensed" cellspacing="0" summary="A summary of the events documented in the class {+data.alias+}.">
                <thead>
                    <tr>
                        <th scope="col" style="width:10%;"></th>
                        <th scope="col">说明</th>
                    </tr>
                </thead>
                <tbody>
                <for each="member" in="ownEvents">
                    <tr>
                        <td class="attributes">{!
                            if (member.isPrivate) output += "&lt;private&gt; ";
                            if (member.isInner) output += "&lt;inner&gt; ";
                            if (member.isStatic) output += "&lt;static&gt; ";
                        !}&nbsp;</td>
                        <td class="nameDescription">
                            <div class="fixedFont"><if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if><b>{+new Link().toSymbol(member.alias).withText(member.name)+}</b>{+makeSignature(member.params)+}
                            </div>
                            <div class="description">{+resolveLinks(summarize(member.desc))+}</div>
                        </td>
                    </tr>
                </for>
                </tbody>
            </table>
            </if>
            
            <if test="data.inheritsFrom.length">
            <dl class="inheritsList">
            {!
                var borrowedMembers = data.events.filter(function($) {return $.memberOf != data.alias});
                var contributers = [];
                borrowedMembers.map(function($) {if (contributers.indexOf($.memberOf) < 0) contributers.push($.memberOf)});
                for (var i = 0, l = contributers.length; i < l; i++) {
                    output +=
                        "<dt>从类 "+new Link().toSymbol(contributers[i])+" 继承的事件: </dt>"
                        +
                        "<dd>" +
                        borrowedMembers
                        .filter(
                            function($) { return $.memberOf == contributers[i] }
                        )
                        .sort(makeSortby("name"))
                        .map(
                            function($) { return new Link().toSymbol($.alias).withText($.name) }
                        )
                        .join(", ")
                        +
                        "</dd>";
                }
            
            !}
            </dl>
            </if>
        </if>

        <!-- ============================== field details ========================== -->        
        <if test="defined(ownProperties) && ownProperties.length">
        <br/>
        <div class="item-box">
            <h3 style="margin-bottom:6px;">属性详情</h3>
        </div>
        <for each="member" in="ownProperties">
            <a name="{+Link.symbolNameToLinkName(member)+}"> </a>
            <div class="fixedFont">{!
                if (member.isStatic || data.isStatic) output += '[Static] ';
            !}
            <b>{+member.name+}</b><if test="member.type"><span class="light">:{+new Link().toSymbol(member.type)+}</span></if>
            
            </div>
            <div class="description">
                {+resolveLinks(member.desc)+}
                <if test="member.srcFile != data.srcFile">
                    <br />
                    <i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
                </if>
                <if test="member.author"><br /><i>作者: </i>{+member.author+}.</if>
            </div>
            
            <if test="member.example.length">
                <for each="example" in="member.example">
                <pre class="code">{+example+}</pre>
                </for>
            </if>

            <if test="member.deprecated">
                <dl class="detailList">
                <dt class="heading">废弃:</dt>
                <dt>
                    {+ resolveLinks(member.deprecated) +}
                </dt>
                </dl>
            </if>
            <if test="member.since">
                <dl class="detailList">
                <dt class="heading">始于:</dt>
                    <dd>{+ member.since +}</dd>
                </dl>
            </if>
            <if test="member.see.length">
                <dl class="detailList">
                <dt class="heading">查看相关:</dt>
                <for each="item" in="member.see">
                <dd>{+ new Link().toSymbol(item) +}</dd>
                </for>
                </dl>
            </if>
            <if test="member.defaultValue">
                <dl class="detailList">
                <dt class="heading">默认值:</dt>
                <dd>
                    {+resolveLinks(member.defaultValue)+}
                </dd>
                </dl>
            </if>

            <if test="!$member_last"><hr/></if>
        </for>
        </if>

        <!-- ============================== constructor details ==================== -->        
        <if test="!data.isStatic && !data.isBuiltin() && (data.isNamespace || data.is('CONSTRUCTOR'))">
        <br/><br/>
        <div class="details">
            <a name="constructor"> </a>
            <div class="item-box"><h3 style="margin-bottom:6px;">构造函数</h3></div>
            <div class="fixedFont">
                <b>{+ data.alias +}</b><if test="classType != 'Namespace '">{+ makeSignature2(data.params) +}</if>
            </div>
            
            <if test="data.params.length">
                <dl class="detailList">
                <dt class="heading"><span class="label label-info">参数</span></dt>
                <for each="item" in="data.params">
                    <dt class="fixedFont" style="margin-left:20px;font-weight:normal;">
                        <b>{+item.name+}</b>{+((item.type)?""+(":<span>"+(new Link().toSymbol(item.type)+"</span> ")) : "")+}
                        <if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if> — {+resolveLinks(item.desc)+}
                    </dt>
                </for>
                </dl>
            </if>
        </div>
        </if>

        <!-- ============================== method details ========================= -->        
        <if test="defined(ownMethods) && ownMethods.length">
        <br/>
        <div class="item-box"><h3 style="margin-bottom:6px;">方法详情</h3></div>
        <for each="member" in="ownMethods">
            <a name="{+Link.symbolNameToLinkName(member)+}"> </a>
            <div class="fixedFont">
            {!
                if (member.isStatic || data.isStatic) output += '[Static] ';
            !}
            <b>{+member.name.replace(/\^\d+$/, '')+}</b>{+makeSignature2(member.params)+}<if test="member.type">:<span class="light">{+new Link().toSymbol(member.type)+}</span></if>
            </div>
            <div class="description">{+resolveLinks(member.desc)+}</div>
            
            <if test="member.example.length">
                <for each="example" in="member.example">
                <pre class="code">{+example+}</pre>
                </for>
            </if>
            
            <if test="member.params.length">
                <dl class="detailList">
                <dt class="heading"><span class="label label-info">参数</span></dt>
                <for each="item" in="member.params">
                    <dt class="fixedFont" style="margin-left:20px;font-weight:normal;">
                        <b>{+item.name+}</b>{+((item.type)?":<span>"+(new Link().toSymbol(item.type))+"</span> " : "")+}
                        <if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if> — {+resolveLinks(item.desc)+}
                    </dt>
                </for>
                </dl>
            </if>
            <if test="member.deprecated">
                <dl class="detailList">
                <dt class="heading">废弃</dt>
                <dt>
                    {+ resolveLinks(member.deprecated) +}
                </dt>
                </dl>
            </if>
            <if test="member.since">
                <dl class="detailList">
                <dt class="heading">始于</dt>
                    <dd>{+ member.since +}</dd>
                </dl>
                </dl>
            </if>
            <if test="member.exceptions.length">
                <dl class="detailList">
                <dt class="heading">异常</dt>
                <for each="item" in="member.exceptions">
                    <dt>
                        {+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
                    </dt>
                    <dd>{+resolveLinks(item.desc)+}</dd>
                </for>
                </dl>
            </if>
            <if test="member.returns.length">
                <dl class="detailList">
                <dt class="heading"><span class="label label-info">返回值</span></dt>
                <for each="item" in="member.returns">
                    <dd class="fixedFont" style="margin-left:20px;font-weight:normal;">{+((item.type)?"<span>"+(new Link().toSymbol(item.type))+"</span> " : "")+} — {+resolveLinks(item.desc)+}</dd>
                </for>
                </dl>
            </if>
            <if test="member.requires.length">
                <dl class="detailList">
                <dt class="heading">需求</dt>
                <for each="item" in="member.requires">
                    <dd>{+ resolveLinks(item) +}</dd>
                </for>
                </dl>
            </if>
            <if test="member.see.length">
                <dl class="detailList">
                <dt class="heading">相关</dt>
                <for each="item" in="member.see">
                    <dd>{+ new Link().toSymbol(item) +}</dd>
                </for>
                </dl>
            </if>

            <if test="!$member_last"><hr/></if>
        </for>
        </if>
        
        <!-- ============================== event details ========================= -->     
        <if test="defined(ownEvents) && ownEvents.length">
            <h3 style="margin-bottom:6px;">事件详情</h3>

            <for each="member" in="ownEvents">
                <a name="{+Link.symbolNameToLinkName(member)+}"> </a>
                <div class="fixedFont">{!
                    if (member.isPrivate) output += "&lt;private&gt; ";
                    if (member.isInner) output += "&lt;inner&gt; ";
                    if (member.isStatic) output += "&lt;static&gt; ";
                !}
                
                <if test="member.type"><span class="light">{{+new Link().toSymbol(member.type)+}}</span></if>
                <if test="member.isStatic && member.memberOf != '_global_'"><span class="light">{+member.memberOf+}.</span></if><b>{+member.name+}</b>{+makeSignature(member.params)+}
                
                </div>
                <div class="description">
                    {+resolveLinks(member.desc)+}
                    <if test="member.srcFile != data.srcFile">
                        <br />
                        <i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
                    </if>
                    <if test="member.author"><br /><i>作者: </i>{+member.author+}.</if>
                </div>
                
                <if test="member.example.length">
                <for each="example" in="member.example">
                <pre class="code">{+example+}</pre>
                </for>
                </if>
                
                    <if test="member.params.length">
                        <dl class="detailList">
                        <dt class="heading">参数:</dt>
                        <for each="item" in="member.params">
                            <dt>
                                {+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}<b>{+item.name+}</b>
                                <if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
                            </dt>
                            <dd>{+ resolveLinks(item.desc) +}</dd>
                        </for>
                        </dl>
                    </if>
                    <if test="member.deprecated">
                        <dl class="detailList">
                        <dt class="heading">废弃:</dt>
                        <dt>
                            {+ resolveLinks(member.deprecated) +}
                        </dt>
                        </dl>
                    </if>
                    <if test="member.since">
                        <dl class="detailList">
                        <dt class="heading">始于:</dt>
                            <dd>{+ member.since +}</dd>
                        </dl>
                        </dl>
                    </if>
                    <if test="member.exceptions.length">
                        <dl class="detailList">
                        <dt class="heading">异常:</dt>
                        <for each="item" in="member.exceptions">
                            <dt>
                                {+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
                            </dt>
                            <dd>{+ resolveLinks(item.desc) +}</dd>
                        </for>
                        </dl>
                    </if>
                    <if test="member.returns.length">
                        <dl class="detailList">
                        <dt class="heading">返回值:</dt>
                        <for each="item" in="member.returns">
                            <dd>{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
                        </for>
                        </dl>
                    </if>
                    <if test="member.requires.length">
                        <dl class="detailList">
                        <dt class="heading">需求:</dt>
                        <for each="item" in="member.requires">
                            <dd>{+ resolveLinks(item) +}</dd>
                        </for>
                        </dl>
                    </if>
                    <if test="member.see.length">
                        <dl class="detailList">
                        <dt class="heading">查看相关:</dt>
                        <for each="item" in="member.see">
                            <dd>{+ new Link().toSymbol(item) +}</dd>
                        </for>
                        </dl>
                    </if>

                <if test="!$member_last"><hr/></if>
            </for>
        </if>

        </div>
    </div>

    <hr>
    <footer>
    <p style="text-align:center;">&copy; HiloJS 2014</p>
    </footer>
</div>

<script src="../../js/jquery.min.js"></script>
<script src="../../js/bootstrap.min.js"></script>

</body>
</html>
